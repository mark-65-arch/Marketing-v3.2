---
// üç™ Simplified Cookie Banner Component
// Purpose: Texas TDPSA-compliant cookie notice for small business
// Features: Single accept button, friendly language, mobile-responsive

interface Props {
  currentLang?: string;
}

const {
  currentLang = 'en'
} = Astro.props;

const BASE_URL = import.meta.env.BASE_URL;
const isSpanish = currentLang === 'es';
const langPrefix = isSpanish ? 'es/' : '';
---

<!-- üç™ Simple Cookie Notice Banner -->
<div
  id="cookie-banner"
  class="fixed bottom-0 left-0 right-0 z-50 transform translate-y-full transition-transform duration-300 ease-in-out"
  role="dialog"
  aria-label={isSpanish ? 'Aviso de Cookies' : 'Cookie Notice'}
  aria-describedby="cookie-banner-description"
  aria-hidden="true"
>
  <div class="bg-slate-900/95 backdrop-blur-sm border-t border-slate-700 shadow-2xl">
    <div class="container mx-auto px-4 py-4 max-w-6xl">
      <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3">

        <!-- üìù Banner Message -->
        <div class="flex-1">
          <p id="cookie-banner-description" class="text-white text-sm sm:text-base">
            {isSpanish
              ? 'Utilizamos cookies para mejorar su experiencia y entender c√≥mo usa nuestro sitio.'
              : 'We use cookies to improve your experience and understand how you use our site.'
            }
            <a
              href={`${BASE_URL}${langPrefix}legal/privacy-policy`}
              class="text-blue-400 hover:text-blue-300 underline ml-1"
            >
              {isSpanish ? 'M√°s informaci√≥n' : 'Learn more'}
            </a>
          </p>
        </div>

        <!-- ‚úÖ Accept Button -->
        <div class="flex-shrink-0">
          <button
            id="cookie-accept-btn"
            class="w-full sm:w-auto px-6 py-2.5 text-sm font-semibold text-white bg-gradient-to-r from-blue-600 to-teal-600 hover:from-blue-700 hover:to-teal-700 rounded-lg transition-all duration-200 focus:ring-4 focus:ring-blue-300 focus:outline-none shadow-lg"
            aria-label={isSpanish ? 'Aceptar cookies' : 'Accept cookies'}
          >
            {isSpanish ? 'Aceptar' : 'Accept'}
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // üç™ Simple Cookie Consent Management

  const CONSENT_COOKIE_NAME = 'mah_cookie_consent';
  const CONSENT_EXPIRY_DAYS = 365;

  class SimpleCookieBanner {
    private banner: HTMLElement | null;

    constructor() {
      this.banner = document.getElementById('cookie-banner');
      this.init();
    }

    init() {
      // Check if user has already accepted
      if (!this.hasAcceptedCookies()) {
        this.showBanner();
      } else {
        // User previously accepted - update GTM consent
        this.updateGTMConsent('granted');
      }

      this.bindEvents();
    }

    bindEvents() {
      document.getElementById('cookie-accept-btn')?.addEventListener('click', () => {
        this.handleAccept();
      });
    }

    hasAcceptedCookies(): boolean {
      // Check localStorage first
      try {
        const stored = localStorage.getItem(CONSENT_COOKIE_NAME);
        if (stored === 'true') return true;
      } catch (e) {
        console.warn('LocalStorage unavailable:', e);
      }

      // Fallback to cookie
      const cookie = document.cookie
        .split('; ')
        .find(row => row.startsWith(`${CONSENT_COOKIE_NAME}=`));

      return cookie?.split('=')[1] === 'true';
    }

    saveConsent() {
      const expiryDate = new Date();
      expiryDate.setDate(expiryDate.getDate() + CONSENT_EXPIRY_DAYS);

      // Save to localStorage
      try {
        localStorage.setItem(CONSENT_COOKIE_NAME, 'true');
      } catch (e) {
        console.warn('Failed to save to localStorage:', e);
      }

      // Save to cookie as backup
      try {
        document.cookie = `${CONSENT_COOKIE_NAME}=true; expires=${expiryDate.toUTCString()}; path=/; SameSite=Strict`;
      } catch (e) {
        console.warn('Failed to save cookie:', e);
      }
    }

    handleAccept() {
      this.saveConsent();
      this.updateGTMConsent('granted');
      this.hideBanner();
    }

    updateGTMConsent(state: 'granted' | 'denied') {
      // Update GTM Consent Mode v2
      if (typeof window.gtag === 'function') {
        window.gtag('consent', 'update', {
          'analytics_storage': state
        });
        console.log(`GTM consent updated: analytics_storage=${state}`);
      } else {
        console.warn('gtag function not available');
      }
    }

    showBanner() {
      if (this.banner) {
        this.banner.classList.remove('translate-y-full');
        this.banner.setAttribute('aria-hidden', 'false');

        // Focus accept button for accessibility
        setTimeout(() => {
          const acceptButton = document.getElementById('cookie-accept-btn') as HTMLElement;
          acceptButton?.focus();
        }, 300);
      }
    }

    hideBanner() {
      if (this.banner) {
        this.banner.classList.add('translate-y-full');
        this.banner.setAttribute('aria-hidden', 'true');
      }
    }
  }

  // Type declaration for gtag
  declare global {
    interface Window {
      gtag?: (...args: any[]) => void;
      dataLayer?: any[];
    }
  }

  // Initialize on DOM ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      new SimpleCookieBanner();
    });
  } else {
    new SimpleCookieBanner();
  }
</script>

<style>
  /* Smooth banner animation */
  #cookie-banner {
    box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.3);
  }

  /* Focus states for accessibility */
  button:focus-visible,
  a:focus-visible {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    #cookie-banner .container {
      padding-left: 1rem;
      padding-right: 1rem;
    }
  }

  /* Respect user's motion preferences */
  @media (prefers-reduced-motion: reduce) {
    #cookie-banner {
      transition-duration: 0.01ms !important;
    }
  }
</style>
