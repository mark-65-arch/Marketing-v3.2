---
// 🧭 Header Component
// Purpose: Main navigation with mobile responsiveness and accessibility
// Features: Sticky positioning, mobile menu, proper ARIA labels

interface Props {
  currentPath?: string;
}

const { currentPath = '' } = Astro.props;

// 🧭 Navigation items configuration with dropdown for services
const navItems = [
  { href: import.meta.env.BASE_URL, label: 'Home', active: currentPath === '/' },
  {
    href: '#services',
    label: 'Services',
    active: currentPath.includes('business-profile-optimization') || currentPath.includes('website-design') || currentPath.includes('pro-website-growth') || currentPath.includes('seo-growth'),
    dropdown: [
      { href: `${import.meta.env.BASE_URL}business-profile-optimization`, label: 'Business Profile Optimization' },
      { href: `${import.meta.env.BASE_URL}website-design-that-converts`, label: 'Website Design That Converts' },
      { href: `${import.meta.env.BASE_URL}pro-website-growth-plan`, label: 'Website & Growth - Pro' },
      { href: `${import.meta.env.BASE_URL}seo-growth-strategy`, label: 'SEO & Growth - Support' }
    ]
  },
  { href: '#pricing', label: 'Pricing', active: false },
  { href: '#about', label: 'About', active: false },
  { href: `${import.meta.env.BASE_URL}contact`, label: 'Contact', active: currentPath.includes('contact') }
];
---

<!-- 🧭 Main Navigation Header -->
<header class="sticky top-0 z-50 backdrop-blur-lg bg-white/90 border-b border-white/20 shadow-sm" role="banner">
  <div class="container mx-auto px-4 py-4">
    <div class="flex justify-between items-center">

      <!-- 🏠 Brand Logo -->
      <!-- Original icon (if you want to revert):
      <div class="w-10 h-10 bg-gradient-to-br from-blue-900 to-blue-600 rounded-full flex items-center justify-center mr-3 shadow-md">
        <i class="fas fa-robot text-white text-lg" aria-hidden="true"></i>
      </div>
      -->
      <div class="flex items-center" role="img" aria-label="Marketing AI Houston Logo">
        <img
          src={`${import.meta.env.BASE_URL}logo.png`}
          alt="Marketing AI Houston - Houston skyline with AI tech elements"
          class="w-20 h-20 mr-3"
        />
        <span class="font-bold text-blue-900 text-lg">Marketing AI Houston</span>
      </div>

      <!-- 🖥️ Desktop Navigation -->
      <nav class="hidden md:flex space-x-8" role="navigation" aria-label="Main navigation">
        {navItems.map(item => (
          item.dropdown ? (
            <!-- 📋 Services Dropdown -->
            <div class="nav-dropdown">
              <button
                class={`font-medium transition-colors duration-200 hover:text-blue-600 focus:text-blue-600 focus:outline-none flex items-center cursor-pointer ${
                  item.active ? 'text-blue-600' : 'text-gray-700'
                }`}
                aria-expanded="false"
                aria-haspopup="true"
                type="button"
              >
                {item.label}
                <i class="fas fa-chevron-down dropdown-chevron ml-1 text-xs" aria-hidden="true"></i>
              </button>

              <!-- 📂 Dropdown Menu -->
              <div class="dropdown-menu">
                <div class="py-2">
                  {item.dropdown.map(dropdownItem => (
                    <a
                      href={dropdownItem.href}
                      class="block px-4 py-3 text-gray-700 hover:bg-blue-50 hover:text-blue-600 transition-colors duration-200 border-b border-gray-50 last:border-b-0"
                    >
                      {dropdownItem.label}
                    </a>
                  ))}
                </div>
              </div>
            </div>
          ) : (
            <!-- 🔗 Regular Navigation Link -->
            <a
              href={item.href}
              class={`font-medium transition-colors duration-200 hover:text-blue-600 focus:text-blue-600 ${
                item.active ? 'text-blue-600' : 'text-gray-700'
              }`}
              {...(item.active && { 'aria-current': 'page' })}
            >
              {item.label}
            </a>
          )
        ))}
      </nav>

      <!-- 🎯 CTA and Mobile Menu -->
      <div class="flex items-center space-x-3">
        <!-- 📞 Primary CTA Button -->
        <a
          href={`${import.meta.env.BASE_URL}contact#contact-options`}
          class="bg-gradient-to-r from-blue-600 to-teal-600 hover:from-blue-700 hover:to-teal-700 text-white font-semibold py-2 px-6 rounded-full transition-all duration-300 transform hover:scale-105 shadow-md focus:ring-4 focus:ring-blue-200 text-sm md:text-base"
          aria-label="Contact us to get started"
        >
          <span class="hidden sm:inline">Get Started</span>
          <span class="sm:hidden">Contact</span>
        </a>

        <!-- 📱 Mobile Menu Toggle -->
        <button
          id="mobile-menu-button"
          class="md:hidden p-2 rounded-lg text-blue-900 hover:bg-blue-50 focus:bg-blue-50 transition-colors duration-200"
          aria-expanded="false"
          aria-controls="mobile-menu"
          aria-label="Toggle main menu"
        >
          <i class="fas fa-bars text-xl" aria-hidden="true"></i>
        </button>
      </div>
    </div>

    <!-- 📱 Mobile Navigation Menu -->
    <nav
      id="mobile-menu"
      class="mobile-menu mt-4 pb-4 border-t border-gray-200 hidden"
      role="navigation"
      aria-label="Mobile navigation"
      aria-hidden="true"
    >
      <div class="flex flex-col space-y-3 pt-4">
        {navItems.map(item => (
          item.dropdown ? (
            <!-- 📋 Mobile Services Section -->
            <div>
              <div class="py-2 font-medium text-gray-900 border-b border-gray-200 mb-2">
                {item.label}
              </div>
              <div class="pl-4 space-y-2">
                {item.dropdown.map(dropdownItem => (
                  <a
                    href={dropdownItem.href}
                    class="block py-2 font-medium text-gray-600 hover:text-blue-600 focus:text-blue-600 transition-colors duration-200"
                    tabindex="-1"
                  >
                    {dropdownItem.label}
                  </a>
                ))}
              </div>
            </div>
          ) : (
            <!-- 🔗 Regular Mobile Link -->
            <a
              href={item.href}
              class={`py-2 font-medium transition-colors duration-200 hover:text-blue-600 focus:text-blue-600 ${
                item.active ? 'text-blue-600' : 'text-gray-700'
              }`}
              {...(item.active && { 'aria-current': 'page' })}
              tabindex="-1"
            >
              {item.label}
            </a>
          )
        ))}

        <!-- 📞 Mobile CTA -->
        <a
          href={`${import.meta.env.BASE_URL}contact#contact-options`}
          class="bg-gradient-to-r from-blue-600 to-teal-600 hover:from-blue-700 hover:to-teal-700 text-white font-semibold py-3 px-6 rounded-full transition-all duration-300 text-center mt-4 shadow-md"
          tabindex="-1"
          aria-label="Book a free discovery call"
        >
          📞 Book a <span class="bg-yellow-400 text-black px-2 py-1 rounded font-bold ml-1">FREE</span> Discovery Call
        </a>
      </div>
    </nav>
  </div>
</header>

<style>
  /* 📱 Mobile menu animation */
  .mobile-menu {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out, opacity 0.3s ease-out;
    opacity: 0;
  }

  .mobile-menu.active {
    max-height: 400px;
    opacity: 1;
    display: block;
  }

  /* 🎯 Smooth header backdrop blur */
  header {
    -webkit-backdrop-filter: blur(12px);
    backdrop-filter: blur(12px);
  }

  /* 📋 Desktop Dropdown Menu */
  .nav-dropdown {
    position: relative;
  }

  .nav-dropdown .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    margin-top: 0;
    padding-top: 0.5rem;
    width: 16rem;
    background: white;
    border-radius: 0.5rem;
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    border: 1px solid rgba(0, 0, 0, 0.05);
    opacity: 0;
    visibility: hidden;
    transform: translateY(-8px);
    transition: all 0.2s ease-out;
    z-index: 50;
    pointer-events: none;
  }

  /* Create invisible bridge to prevent hover gaps */
  .nav-dropdown::after {
    content: '';
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    height: 0.5rem;
    background: transparent;
    z-index: 49;
  }

  .nav-dropdown:hover .dropdown-menu,
  .nav-dropdown.active .dropdown-menu {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
    pointer-events: auto;
  }

  .nav-dropdown:hover .dropdown-chevron,
  .nav-dropdown.active .dropdown-chevron {
    transform: rotate(180deg);
  }

  .dropdown-chevron {
    transition: transform 0.2s ease-out;
  }

  /* 🎯 Ensure dropdown stays open when hovering over menu items */
  .nav-dropdown:hover,
  .nav-dropdown.active {
    z-index: 51;
  }
</style>

<script>
  // 📱 Mobile Menu Functionality with Accessibility
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');

    if (mobileMenuButton && mobileMenu) {
      // Toggle menu function
      const toggleMenu = () => {
        const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
        const newState = !isExpanded;

        // Update button state
        mobileMenuButton.setAttribute('aria-expanded', newState.toString());

        // Update menu visibility
        mobileMenu.setAttribute('aria-hidden', (!newState).toString());
        mobileMenu.classList.toggle('active', newState);

        // Update tabindex for menu items
        const menuLinks = mobileMenu.querySelectorAll('a');
        menuLinks.forEach(link => {
          link.tabIndex = newState ? 0 : -1;
        });

        // Update icon
        const icon = mobileMenuButton.querySelector('i');
        if (icon) {
          icon.className = newState ? 'fas fa-times text-xl' : 'fas fa-bars text-xl';
        }
      };

      // Button click handler
      mobileMenuButton.addEventListener('click', toggleMenu);

      // Close menu when clicking outside
      document.addEventListener('click', (e) => {
        const isClickInsideMenu = mobileMenu.contains(e.target as Node);
        const isClickOnButton = mobileMenuButton.contains(e.target as Node);

        if (!isClickInsideMenu && !isClickOnButton && mobileMenu.classList.contains('active')) {
          toggleMenu();
        }
      });

      // Close menu on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && mobileMenu.classList.contains('active')) {
          toggleMenu();
          mobileMenuButton.focus();
        }
      });

      // Close menu when window is resized to desktop
      window.addEventListener('resize', () => {
        if (window.innerWidth >= 768 && mobileMenu.classList.contains('active')) {
          toggleMenu();
        }
      });
    }

    // 📋 Desktop Dropdown Functionality
    const dropdowns = document.querySelectorAll('.nav-dropdown');

    dropdowns.forEach(dropdown => {
      const button = dropdown.querySelector('button');
      const menu = dropdown.querySelector('.dropdown-menu');

      if (button && menu) {
        // Click to toggle dropdown (for touch devices)
        button.addEventListener('click', (e) => {
          e.preventDefault();

          // Close other dropdowns
          dropdowns.forEach(otherDropdown => {
            if (otherDropdown !== dropdown) {
              otherDropdown.classList.remove('active');
            }
          });

          // Toggle current dropdown
          dropdown.classList.toggle('active');
        });

        // Close dropdown when clicking outside
        document.addEventListener('click', (e) => {
          if (!dropdown.contains(e.target as Node)) {
            dropdown.classList.remove('active');
          }
        });

        // Close dropdown on escape key
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape') {
            dropdown.classList.remove('active');
          }
        });

        // Handle keyboard navigation
        button.addEventListener('keydown', (e) => {
          if (e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            dropdown.classList.toggle('active');
          } else if (e.key === 'ArrowDown') {
            e.preventDefault();
            dropdown.classList.add('active');
            const firstLink = menu.querySelector('a');
            if (firstLink) firstLink.focus();
          }
        });

        // Focus management within dropdown
        const menuLinks = menu.querySelectorAll('a');
        menuLinks.forEach((link, index) => {
          link.addEventListener('keydown', (e) => {
            if (e.key === 'ArrowDown') {
              e.preventDefault();
              const nextLink = menuLinks[index + 1] || menuLinks[0];
              nextLink.focus();
            } else if (e.key === 'ArrowUp') {
              e.preventDefault();
              const prevLink = menuLinks[index - 1] || menuLinks[menuLinks.length - 1];
              prevLink.focus();
            } else if (e.key === 'Escape') {
              e.preventDefault();
              dropdown.classList.remove('active');
              button.focus();
            }
          });
        });
      }
    });
  });
</script>