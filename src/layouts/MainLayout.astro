---
// 🏗️ Main Layout Component
// Purpose: Complete page layout with header, footer, and SEO optimization
// Features: Integrated SEO, structured data, performance optimizations

import BaseLayout from './BaseLayout.astro';
import GlobalNav from '../components/GlobalNav.astro';
import Footer from '../components/Footer.astro';
import ChevronRightIcon from '../components/icons/ChevronRightIcon.astro';

import {
  generateLocalBusinessSchema,
  generateBreadcrumbSchema,
  generateOpenGraphTags,
  generateTwitterCardTags,
  type SEOConfig,
  type BreadcrumbItem,
  DEFAULT_SEO,
  BUSINESS_INFO
} from '../utils/seo.ts';

interface Props extends SEOConfig {
  showNewsletter?: boolean;
  breadcrumbs?: BreadcrumbItem[];
  structuredData?: object[];
  currentPath?: string;
  pageType?: 'home' | 'service' | 'contact' | 'about' | 'blog';
  lang?: string;
  alternateLanguages?: { lang: string; url: string }[];
}

const {
  title = DEFAULT_SEO.title,
  description = DEFAULT_SEO.description,
  canonicalURL,
  ogImage = `${import.meta.env.SITE}${import.meta.env.BASE_URL}og-image.png`,
  ogType = 'website',
  noindex = false,
  keywords = DEFAULT_SEO.keywords,
  author = DEFAULT_SEO.author,
  publishedTime,
  modifiedTime,
  showNewsletter = false,
  breadcrumbs = [],
  structuredData = [],
  currentPath = Astro.url.pathname,
  pageType = 'home',
  lang = 'en',
  alternateLanguages = []
} = Astro.props;

// 🔍 SEO: Enhanced title with brand consistency
const fullTitle = title.includes(BUSINESS_INFO.name)
  ? title
  : `${title} | ${BUSINESS_INFO.name}`;

// 📊 Structured Data: Always include local business + additional schemas
const allStructuredData = [
  generateLocalBusinessSchema(),
  ...(breadcrumbs.length > 0 ? [generateBreadcrumbSchema(breadcrumbs)] : []),
  ...structuredData
];

// 🏷️ Generate meta tags
const ogTags = generateOpenGraphTags({
  title: fullTitle,
  description,
  canonicalURL,
  ogImage,
  ogType,
  publishedTime,
  modifiedTime
});

const twitterTags = generateTwitterCardTags({
  title: fullTitle,
  description,
  ogImage
});

// 📱 Viewport configuration based on page type
const viewportConfig = pageType === 'contact'
  ? 'width=device-width, initial-scale=1.0, user-scalable=yes'
  : 'width=device-width, initial-scale=1.0';

// 🌐 Hreflang automation: Generate alternate language URLs
const siteUrl = import.meta.env.SITE || 'https://marketingaihouston.com';
const baseUrl = import.meta.env.BASE_URL || '/';

// Get clean path without BASE_URL and /es/ prefix
let cleanPath = currentPath;
if (cleanPath.startsWith(baseUrl) && baseUrl !== '/') {
  cleanPath = cleanPath.slice(baseUrl.length);
}
if (cleanPath.startsWith('/')) {
  cleanPath = cleanPath.slice(1);
}
if (cleanPath.startsWith('es/')) {
  cleanPath = cleanPath.slice(3);
}
if (cleanPath.endsWith('/') && cleanPath.length > 1) {
  cleanPath = cleanPath.slice(0, -1);
}

// Determine if current page is Spanish
const isSpanishPage = lang === 'es' || currentPath.includes('/es/');

// Generate hreflang URLs
const enUrl = `${siteUrl}${baseUrl}${cleanPath}`;
const esUrl = `${siteUrl}${baseUrl}es/${cleanPath}`;

// Normalize URLs (remove trailing slashes except for root)
const normalizeUrl = (url: string) => {
  if (url.endsWith('/') && !url.endsWith('//')) {
    return url;
  }
  return url.endsWith('/') ? url.slice(0, -1) : url;
};

const hreflangLinks = [
  { lang: 'en', url: normalizeUrl(enUrl) },
  { lang: 'es', url: normalizeUrl(esUrl) },
  { lang: 'x-default', url: normalizeUrl(enUrl) } // Default to English
];
---

<BaseLayout
  title={fullTitle}
  description={description}
  canonicalURL={canonicalURL}
  ogImage={ogImage}
  noindex={noindex}
  lang={lang}
  alternateLanguages={hreflangLinks}
  pageType={pageType}
  currentPath={currentPath}
>
  <!-- 🔍 Enhanced SEO Meta Tags -->
  <Fragment slot="head">
    <!-- 📱 Responsive viewport -->
    <meta name="viewport" content={viewportConfig} />

    <!-- 🏷️ Keywords (limited for modern SEO) -->
    {keywords && keywords.length > 0 && (
      <meta name="keywords" content={keywords.join(', ')} />
    )}

    <!-- ✍️ Author information -->
    {author && <meta name="author" content={author} />}

    <!-- 🕒 Publication dates -->
    {publishedTime && <meta name="article:published_time" content={publishedTime} />}
    {modifiedTime && <meta name="article:modified_time" content={modifiedTime} />}

    <!-- 🌐 Open Graph tags -->
    {ogTags.map(tag => (
      <meta property={tag.property} content={tag.content} />
    ))}

    <!-- 🐦 Twitter Card tags -->
    {twitterTags.map(tag => (
      <meta name={tag.name} content={tag.content} />
    ))}

    <!-- 🔗 Preconnect to external domains for performance -->
    <link rel="preconnect" href="https://usebasin.com" />
    <link rel="preconnect" href="https://calendly.com" />

    <!-- ⚡ Performance: Google Fonts and Font Awesome removed - using self-hosted fonts and custom SVG icons for faster LCP -->

    <!-- 🎯 Page-specific structured data -->
    {allStructuredData.map(schema => (
      <script type="application/ld+json" set:html={JSON.stringify(schema)} />
    ))}

    <!-- 📈 WebPage structured data -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "WebPage",
      "name": fullTitle,
      "description": description,
      "url": canonicalURL || Astro.url.toString(),
      "isPartOf": {
        "@type": "WebSite",
        "name": BUSINESS_INFO.name,
        "url": BUSINESS_INFO.url
      },
      "about": {
        "@id": `${BUSINESS_INFO.url}#business`
      }
    })} />
    </script>

    <!-- 🔍 Additional page-specific optimizations -->
    {pageType === 'home' && (
      <>
        <!-- Home page specific meta -->
        <!-- Add Google/Bing verification tokens when ready -->
        <link rel="alternate" type="application/rss+xml" title="Marketing AI Houston Blog" href="/rss.xml" />
      </>
    )}

    {pageType === 'contact' && (
      <>
        <!-- Contact page specific meta -->
        <meta name="telephone" content={BUSINESS_INFO.phone} />
        <meta name="contact" content={BUSINESS_INFO.email} />
      </>
    )}
  </Fragment>

  <!-- 🧭 Site Header -->
  <GlobalNav currentPath={currentPath} currentLang={lang} />

  <!-- 📍 Breadcrumb Navigation (if provided) -->
  {breadcrumbs.length > 0 && (
    <nav aria-label="Breadcrumb" class="bg-gray-50 py-3">
      <div class="container mx-auto px-4">
        <ol class="flex items-center space-x-2 text-sm" itemscope itemtype="https://schema.org/BreadcrumbList">
          {breadcrumbs.map((crumb, index) => (
            <li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem" class="flex items-center">
              {index > 0 && (
                <ChevronRightIcon class="text-gray-400 mx-2 w-3 h-3" />
              )}
              <a
                href={crumb.url}
                itemprop="item"
                class="text-gray-600 hover:text-blue-600 transition-colors"
                {...(index === breadcrumbs.length - 1 && { 'aria-current': 'page' })}
              >
                <span itemprop="name">{crumb.name}</span>
              </a>
              <meta itemprop="position" content={String(index + 1)} />
            </li>
          ))}
        </ol>
      </div>
    </nav>
  )}

  <!-- 📄 Main Page Content -->
  <main role="main" id="main-content">
    <slot />
  </main>

  <!-- 🦶 Site Footer -->
  <Footer showNewsletter={showNewsletter} currentLang={lang} />

  <!-- 🎨 Enhanced CSS for layout-specific styling -->
  <style>
    /* ♿ Accessibility: Screen reader only content */
    .sr-only {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border: 0;
    }

    .focus\\:not-sr-only:focus {
      position: static;
      width: auto;
      height: auto;
      padding: 0.5rem 1rem;
      margin: 0;
      overflow: visible;
      clip: auto;
      white-space: normal;
    }

    /* 🎯 Enhanced focus indicators when tabbing */
    .user-tabbing *:focus {
      outline: 2px solid #3b82f6 !important;
      outline-offset: 2px;
    }

    /* 🎨 Smooth background image loading */
    [data-bg] {
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      transition: opacity 0.3s ease-in-out;
    }

    [data-bg]:not(.bg-loaded) {
      opacity: 0;
    }

    [data-bg].bg-loaded {
      opacity: 1;
    }

    /* 📱 Mobile touch targets */
    @media (max-width: 768px) {
      button,
      a[role="button"],
      input[type="submit"],
      input[type="button"] {
        min-height: 44px;
        min-width: 44px;
      }
    }

    /* 🎯 Print styles */
    @media print {
      .no-print {
        display: none !important;
      }

      header, footer {
        position: static !important;
      }

      * {
        background: white !important;
        color: black !important;
        box-shadow: none !important;
      }
    }
  </style>
</BaseLayout>